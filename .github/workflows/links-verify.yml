name: Verify Site Links

on:
  push: {} #  uncomment for testing
  schedule: # daily at 12 noon UTC
    - cron: '0 12 * * *'

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - name: content checkout
      uses: actions/checkout@v3  # https://github.com/marketplace/actions/checkout
      with:
        repository: demisto/content
        path: content
        token: ${{ secrets.GITHUB_TOKEN }}        
        ref: 'master'
    - name: content-docs checkout
      uses: actions/checkout@v3  # https://github.com/marketplace/actions/checkout
      with:
        repository: demisto/content-docs
        path: content-docs
        token: ${{ secrets.GITHUB_TOKEN }}        
    - name: create ignore url files
      # The grep regex finds all URL's in integration README files in the section between ## Commands or <h2>Commands until the end of the file.
      # -R search recursively -P perl regex -o print only the match -z ignore new line -a process a binary file as if it were text
      # we filter out the domains: pan.dev, paloaltonetworks.com
      run: |
        grep -RPoz "(?s)## Commands.*\Z|<h2>Commands.*\Z" --include "README.md" content/Packs/*/Integrations \
        | grep -i -Poa "(http|https)://[a-zA-Z0-9_]+\.[a-zA-Z0-9./?=_%:-]+" \
        | grep -v -i pan.dev \
        | grep -v -i paloaltonetworks.com \
        | sort -u > all_urls_ignore.txt
        sed -i -e 's/^/-e /' all_urls_ignore.txt
        cat content-docs/.github/workflows/urls_ignore.txt >> all_urls_ignore.txt
        cat all_urls_ignore.txt
    - name: Set up Go 1.19
      uses: actions/setup-go@v2
      with:
        go-version: 1.19.2
      id: go
    - name: Setup muffet
      run: 'go install github.com/raviqqe/muffet/v2@latest'
    - name: Verify Links
      # If there are false positives, add ignore urls to .github/workflows/urls_ignore.txt file
      # we use set -f to avoid globing in the shell
      run: |
        muffet --version
        echo "Running test curl..."
        curl -s -v https://xsoar.pan.dev > /dev/null
        echo "Running muffet link checking"
        (set -f; muffet -v -c 16 --ignore-fragments -b 8192 --skip-tls-verification \
        `cat all_urls_ignore.txt` \
        https://xsoar.pan.dev > muffet.txt 2>&1 && echo "muffet completed successfully" && exit 0 || echo "muffet failed but still need to verify output file...")
        grep -v -E '^\s+(401|403|405|429|x509|200|lookup|parse|timeout|dial|body size exceeds)' muffet.txt | grep -B 1 -E '^\s+' > muffet-clean.out
        echo "Muffet output after 401, 403, 405, 429 and x509 remove:"
        cat muffet-clean.out
        if [ -n "$(grep -v '^https'  muffet-clean.out)" ]; then
          bad_urls_count=`grep -E '^\s.*\s+http' muffet-clean.out | wc -l | awk '{print $1}'` 
          echo "muffet failed verification!!! Bad urls count: $bad_urls_count"
          exit 1
        fi
        valid_urls_count=`grep -E '^https://' muffet.txt | wc -l | awk '{print $1}'` 
        echo "All good! muffet passed!!! Valid urls counts: $valid_urls_count"

        if [[ "$valid_urls_count" -lt 2500 ]]; then
          echo "Valid urls processed is too low: [$valid_urls_count]. Failing build..."
          exit 1
        fi
    - name: Save artifcats
      if: ${{ always() }}
      uses: actions/upload-artifact@v3
      with:
        name: log-artifacts
        path: |
          muffet.txt
          muffet-clean.out
          all_urls_ignore.txt
